When would you want to use a remote repository rather than keeping all your work local?

When you are collaborating with others, or working on various machines/locations.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
 
You wouldn’t want any of your work overridden, especially if there are multiple contributors. Seems like you would want to be conscious of this action, jut like committing and merging.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
A clone is when you take an exact copy of a repository. Forking is a clone that is done on GitHub. Branches are spun off from a set of documents within a repository.

What is the benefit of having a copy of the last known state of the remote stored locally?
If you want to work offline, you can, and have the latest code possible.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
You could email files back and forth, although having a central repository would be helpful. Also, you would have to be so on top of emailing people when you made changes, pushed code they should be looking at, etc. This centralized process is extremely helpful.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
If I was trying something that wasn’t fully baked yet, or tested, or where I wanted to keep my original version in case this variation didn’t go anywhere. Also, if I know others are working on pieces that collar with mine, this would be a good reason to work in a separate branch.

